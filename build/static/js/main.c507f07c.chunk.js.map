{"version":3,"sources":["ListNames.js","Filter.js","AddForm.js","services/Persons.js","App.js","index.js"],"names":["ListNames","persons","nameFilter","handleRemove","filter","item","name","toLowerCase","includes","map","key","number","onClick","Filter","handleFilter","onChange","value","AddForm","addNew","handleNameChange","newName","handleNumberChange","newNumber","onSubmit","type","baseUrl","axios","get","newPerson","post","then","response","data","personId","delete","catch","error","console","log","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","notificationType","setType","useEffect","personService","initPersons","Notification","className","event","target","preventDefault","x","person","id","updatedPerson","setTimeout","addedPerson","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c507f07c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ListNames = ({ persons, nameFilter, handleRemove }) => {\r\n  const filteredArray = persons.filter((item) =>\r\n    item.name.toLowerCase().includes(nameFilter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    (<h2>Numbers</h2>),\r\n    filteredArray.map((item) => (\r\n      <p key={item.name}>\r\n        {item.name} {item.number}\r\n        <button onClick={() => handleRemove(item)}>delete</button>\r\n      </p>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default ListNames;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ handleFilter, nameFilter }) => {\r\n  return (\r\n    <div>\r\n      filter shown with{\" \"}\r\n      <input onChange={handleFilter} value={nameFilter}></input>\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst AddForm = ({\r\n  addNew,\r\n  handleNameChange,\r\n  newName,\r\n  handleNumberChange,\r\n  newNumber,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3>Add New</h3>\r\n      <form onSubmit={addNew}>\r\n        <div>\r\n          name: <input onChange={handleNameChange} value={newName} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={handleNumberChange} value={newNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://pacific-fjord-48842.herokuapp.com/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (personId) => {  \r\n  const request = axios.delete(`${baseUrl}/${personId}`).catch((error) => {\r\n    console.log(\"something went wrong\", error);\r\n  });\r\n\r\n  return request.then((response) => response);\r\n};\r\n\r\n// ei toimi\r\nconst update = (personId, newPerson) => {  \r\n  const request = axios.put(`${baseUrl}/${personId}`, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, remove, update };\r\n","//pahoittelut jo etukäteen sekavasta setistä. Koodin siivoaminen ja jakaminen selkeämpiin komponentteihin sai\n// jäädä, kun halusin päästä eteenpäin itse asiassa.\n\nimport React, { useState, useEffect } from \"react\";\n\nimport ListNames from \"./ListNames\";\nimport Filter from \"./Filter\";\nimport AddForm from \"./AddForm\";\nimport personService from \"./services/Persons\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setType] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((initPersons) => {\n        setPersons(initPersons.data);\n      })\n      .catch((error) => {\n        setType(\"error\");\n        setNotification(\"Error fetching data from server\");\n      });\n  }, []);\n\n  const handleRemove = (item) => {\n    //palautetaan tyhjä, eli ei tehdä mitään, jos käyttäjä peruuttaa poiston\n    if (!window.confirm(`Delete`)) {\n      return \"\";\n    }    \n\n    //poistetaan tietokannasta id:n perusteella henkilö.\n    //päivittää staten filtteröimällä\n    personService      \n      .remove(item.id)\n      .then(() => {\n        setPersons(persons.filter((person) => person.id !== item.id));\n        setNotification(`${item.name} was deleted`);\n        setTimeout(() => {\n          setNotification(null);\n        }, 4000);\n      })\n      .catch((error) => {\n        setType(\"error\");\n        setNotification(\"Error deleting\");\n      });\n  };\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const Notification = ({ notification }) => {\n    if (notification === null) {\n      return null;\n    }\n\n    return <div className={notificationType}>{notification}</div>;\n  };\n\n  // uuden henkilön lisääminen\n  const addNew = (event) => {\n    event.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    //uuden henkilön luonti, laittaa uuden henkilön tietokantaan ja päivittää staten\n    //rikkooko hooksien sääntöjä? setPerson on if-lausekkeen takana...\n\n    //puuttuu confirm.window -> voisi ajaa uuden apufunktion handleUpdate tms\n    if (persons.map((x) => x.name).includes(newPerson.name)) {\n      //melkoinen purkkaviritys selvittämään henkilön id, jos henkilön nimi on jo luettelossa\n      const personId = persons.filter(\n        (person) => person.name === newPerson.name\n      )[0].id;\n      personService\n        .update(personId, newPerson)\n        .then((updatedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id !== personId ? person : updatedPerson\n            )\n          );\n          setType(\"info\");\n          setNotification(`${newPerson.name} was updated`);\n\n          setTimeout(() => {\n            setNotification(null);\n          }, 4000);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          setType(\"error\");\n          setNotification(\"Error in updating phonebook\");\n          console.log(error)\n        });\n    } else {\n      personService\n        .create(newPerson)\n        .then((addedPerson) => {\n          setPersons(persons.concat(addedPerson));\n          setType(\"info\");\n          setNotification(`${newPerson.name} was created`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 4000);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          setType(\"error\");\n          setNotification(\"Could not create new person\");\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter handleFilter={handleFilter} nameFilter={nameFilter} />\n\n      <AddForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addNew={addNew}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <ListNames\n        persons={persons}\n        nameFilter={nameFilter}\n        handleRemove={handleRemove}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}